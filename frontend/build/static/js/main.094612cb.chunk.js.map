{"version":3,"sources":["images/header-logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","utils/api.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/DeleteCardPopup.js","components/AddPlacePopup.js","components/ProtectedRoute.js","components/AuthForm.js","components/Login.js","components/Register.js","components/Popup.js","images/OK.svg","images/REJECT.svg","components/InfoTooltip.js","utils/ApiAuth.js","components/NotFound.js","components/App.js","index.js"],"names":["Header","userEmail","onLogOut","className","src","logo","alt","path","to","exact","onClick","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","onCardDelete","type","onCardClick","link","name","onCardLike","likeCounter","Main","onEditAvatar","avatar","onEditProfile","about","onAddPlace","cards","map","length","Footer","date","Date","getFullYear","ImagePopup","onClose","api","config","this","_url","url","_headers","headers","token","authorization","options","fetch","then","_responseResult","res","ok","json","Promise","reject","status","_request","method","data","body","JSON","stringify","cardId","addLike","deleteLike","PopupWithForm","isOpen","onSubmit","title","submitText","children","EditProfilePopup","useState","setName","description","setDescription","buttonText","setButtonText","useEffect","e","preventDefault","onUpdateUser","catch","err","console","log","finally","id","placeholder","minLength","maxLength","value","onChange","target","required","EditAvatarPopup","avaRef","useRef","handleClosePopup","setTimeout","current","onUpdateAvatar","ref","DeleteCardPopup","formName","AddPlacePopup","setLink","ProtectedRoute","Component","component","loggedIn","AuthForm","section","submit","emailValue","passwordValue","autoComplete","Login","onLogin","email","setEmail","password","setPassword","evt","Register","onRegister","Popup","popupName","isImagePopup","document","addEventListener","closeByEscape","removeEventListener","key","currentTarget","InfoTooltip","namePopup","isSuccess","successImg","rejectImg","request","Authorization","NotFound","App","isEditProfilePopupOpen","setIsEditProfilePopupOpenClose","isAddCardPopupOpen","setIsAddCardPopupOpenClose","isEditAvatarPopupOpen","setEditAvatarPopupOpenClose","isDeleteCardPopupOpen","setIsDeleteCardPopupOpen","selectedCard","setSelectedCard","setCurrentUser","isImagePopupOpen","setImagePopupOpen","setCards","toDeleteCard","setToDeleteCard","setLoggedIn","isRegistrationSuccess","setIsRegistrationSuccess","isInfoTooltipOpen","setIsInfoTooltipOpen","setUserEmail","history","useHistory","closeAllPopups","jwt","localStorage","getItem","setToken","getUserData","checkToken","all","getInitialCards","userInfo","cardList","Provider","removeItem","push","toLocaleTimeString","changeLikeCardStatus","newCard","state","c","ApiAuth","setItem","updateUserData","alert","addNewCard","deleteCard","filter","updateAvatar","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.094612cb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/header-logo.bbe2a6ea.svg\";","import React from \"react\";\r\nimport logo from \"../images/header-logo.svg\"; //Импортируем логотип\r\nimport { Link, Route } from 'react-router-dom';\r\n\r\nfunction Header({ userEmail, onLogOut }) { //Создаем компонент Header\r\n  return (  //Вставляем разметку шапки на страницу\r\n    <header className=\"header\">\r\n      <img src={logo} alt=\"Логотип\" className=\"header__logo\" />\r\n      <Route path={'/sign-up'}>\r\n        <Link to='/sign-in' className=\"header__auth\">\r\n          Войти\r\n        </Link>\r\n      </Route>\r\n\r\n      <Route path={'/sign-in'}>\r\n        <Link to='/sign-up' className=\"header__auth\">\r\n          Регистрация\r\n        </Link>\r\n      </Route>\r\n\r\n      <Route exact path={'/'}>\r\n        <div className=\"header__profile\">\r\n          <p className=\"header__email\">{userEmail}</p>\r\n          <Link to=\"/sign-in\" className=\"header__sign-out\" onClick={onLogOut}>\r\n            Выйти\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport const CurrentUserContext = React.createContext();","import React from \"react\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nfunction Card(props) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  \r\n  // Определяем, являемся ли мы владельцем текущей карточки\r\n  const isOwn = props.card.owner._id === currentUser._id;\r\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n  const cardDeleteButtonClassName = (`photo__button-delete ${isOwn ? 'photo__button-delete_active' : \"\"}`)\r\n  \r\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n  const isLiked = props.card.likes.some(i => i._id === currentUser._id);\r\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n  const cardLikeButtonClassName = (`photo__button-like ${isLiked ? 'photo__button-like_active' : \"\"}`)\r\n\r\n  function handleClick() {\r\n    props.onCardClick(props.card);\r\n  }\r\n\r\n  function handleLikeClick () {\r\n    props.onCardLike(props.card);\r\n  }\r\n\r\n  function handleDeleteClick() {\r\n    props.onCardDelete(props.card._id);\r\n  }\r\n\r\n  return (\r\n      <li className=\"photo\">\r\n        <button \r\n        className={cardDeleteButtonClassName} \r\n        onClick={handleDeleteClick}\r\n        type=\"button\" \r\n        />\r\n        <img\r\n          className=\"photo__item\"\r\n          onClick={handleClick}\r\n          src={props.card.link}\r\n          alt={props.card.name}\r\n        />\r\n        <div className=\"photo__description\">\r\n          <h2 className=\"photo__title\">{props.card.name}</h2>\r\n          <div className=\"photo__likebox\">\r\n            <button\r\n              className={cardLikeButtonClassName}\r\n              onClick={handleLikeClick }\r\n              type=\"button\"\r\n            />\r\n            <div className=\"photo__count\">{props.likeCounter}</div>\r\n          </div>\r\n        </div>\r\n      </li>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nfunction Main(props) {\r\n  const currentUser = React.useContext(CurrentUserContext); //Подписка на контекст\r\n  \r\n  return (\r\n    <>\r\n      <section className=\"profile\">\r\n          <div className=\"profile__avatar\">\r\n            <button onClick={props.onEditAvatar} className=\"profile__avatar-button\">\r\n              <img\r\n                src={currentUser.avatar}\r\n                alt=\"Фото профиля\"\r\n                className=\"profile__image\"\r\n              />\r\n            </button>\r\n          </div>\r\n          <div className=\"profile__info\">\r\n            <div className=\"profile__name-box\">\r\n              <h1 className=\"profile__name text\">{currentUser.name || \"\"}</h1>\r\n              <button\r\n                className=\"profile__button profile__button-edit\"\r\n                onClick={props.onEditProfile}\r\n                type=\"button\"\r\n              />\r\n            </div>\r\n            <div className=\"profile__prof text\">{currentUser.about || \"\"}</div>\r\n          </div>\r\n        <button\r\n          className=\"profile__button profile__button-add\"\r\n          onClick={props.onAddPlace}\r\n          type=\"button\"\r\n        />\r\n      </section>\r\n      <section className=\"gallery\">\r\n        <ul className=\"gallery__list\">\r\n          {props.cards.map((card) => (\r\n            <Card\r\n              key={card._id}\r\n              card={card}\r\n              likeCounter={card.likes.length}\r\n              onCardClick={props.onCardClick}\r\n              onCardLike={props.onCardLike}\r\n              onCardDelete={props.onCardDelete}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  const date = new Date().getFullYear();\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__author\">&copy; {date} Евгений Миляков</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","function ImagePopup(props) {\r\n  return (\r\n    <div\r\n      className={`popup popup_type_fullscreen-image ${\r\n        props.card.link && \"popup_opened\"\r\n      }`}\r\n    >\r\n      <figure className=\"popup__image-container\">\r\n        <button\r\n          className=\"popup__button-close\"\r\n          onClick={props.onClose}\r\n          type=\"button\"\r\n        ></button>\r\n        <img\r\n          className=\"popup__image\"\r\n          src={`${props.card.link}`}\r\n          alt={props.card.name}\r\n        />\r\n        <figcaption className=\"popup__image-caption\">{props.card.name}</figcaption>\r\n      </figure>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;\r\n","class Api {\r\n  constructor(config) {\r\n    this._url = config.url;\r\n    this._headers = config.headers;\r\n  }\r\n\r\n  setToken(token) {\r\n    this._headers.authorization = `Bearer ${token}`;\r\n  }\r\n  \r\n  _request(url, options) {\r\n    return fetch(url, options)\r\n      .then(this._responseResult);\r\n  }\r\n\r\n  _responseResult(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n\r\n  getInitialCards() {\r\n    return this._request(`${this._url}/cards`, {\r\n      method: \"GET\",\r\n      headers: this._headers\r\n    });\r\n  }\r\n  getUserData() {\r\n    return this._request(`${this._url}/users/me`, {\r\n      method: \"GET\",\r\n      headers: this._headers\r\n    });\r\n  }\r\n  addNewCard(data) {\r\n    return this._request(`${this._url}/cards`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify(data)\r\n    });\r\n  }\r\n\r\n  deleteCard(cardId) {\r\n    return this._request(`${this._url}/cards/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers\r\n    });\r\n  }\r\n\r\n  updateUserData(data) {\r\n    return this._request(`${this._url}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify(data)\r\n    });\r\n  }\r\n  changeLikeCardStatus(card, isLiked) {\r\n    if (isLiked) {\r\n      return this.addLike(card);\r\n    } else {\r\n      return this.deleteLike(card);\r\n    }\r\n  }\r\n\r\n  addLike(data) {\r\n    return this._request(`${this._url}/cards/likes/${data}`, {\r\n        method: \"PUT\",\r\n        headers: this._headers\r\n      });\r\n  }\r\n\r\n  deleteLike(data) {\r\n    return this._request(`${this._url}/cards/likes/${data}`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers\r\n    });\r\n  }\r\n\r\n  updateAvatar(data) {\r\n    return this._request(`${this._url}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify(data)\r\n    });\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  url: \"https://api.mesto-exo.nomoredomains.icu\",\r\n  headers: {\r\n    \"content-type\": \"application/json\",\r\n  },\r\n});\r\n\r\n\r\nexport default api;\r\n","import React from \"react\";\r\n\r\nfunction PopupWithForm({isOpen, onClose, onSubmit, name, title, submitText, children}) { \r\n  return (\r\n    <div className={`popup ${isOpen && \"popup_opened\"}`}>\r\n      <div className={`popup__container popup__container_type_${name}`}>\r\n        <form \r\n          onSubmit={onSubmit} //Добавили пропс onSubmit\r\n          className=\"popup__form\" \r\n          name={name} \r\n        >\r\n          <button\r\n            className=\"popup__button-close\"\r\n            onClick={onClose}\r\n            type=\"button\">\r\n          </button>\r\n          <h2 className=\"popup__head\">{title}</h2>\r\n            {children}\r\n          <button className=\"popup__button-submit\" type=\"submit\">\r\n            {submitText}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nfunction EditProfilePopup(props) {  //Выносим компонент из App и \r\n    const currentUser = React.useContext(CurrentUserContext); //подключаем контекст\r\n    //Создаем стейт-переменные для формы редактирования профиля\r\n    const [name, setName] = React.useState(\"\");\r\n    const [description, setDescription] = React.useState(\"\");\r\n    const [buttonText, setButtonText] = React.useState(\"Сохранить\");\r\n\r\n    function handleNameChange (e) { //Ф-я изменения имени \r\n        setName(e.target.value);\r\n    }\r\n\r\n    function handleAboutChange (e) { //Ф-я изменения инф-ии \"О себе\"\r\n        setDescription(e.target.value);\r\n    }\r\n\r\n    function handleSubmit (e) { //Добавляем обработчик handleSubmit\r\n        // Запрещаем браузеру переходить по адресу формы\r\n        e.preventDefault();\r\n        setButtonText(\"Загрузка...\");\r\n        // Передаём значения управляемых компонентов во внешний обработчик\r\n        props.onUpdateUser({ //Обновляем данные\r\n                name: name,\r\n                about: description\r\n            })\r\n            .then(() => props.onClose())\r\n            .catch((err) => console.log(err))\r\n            .finally(() => {\r\n                setButtonText(\"Сохранить\"); //Возвращаем текст кнопки\r\n            });\r\n    }\r\n    // После загрузки текущего пользователя из API\r\n    // его данные будут использованы в управляемых компонентах.\r\n    React.useEffect(() => {\r\n        if (props.isOpen === true) {\r\n            setName(currentUser.name);\r\n            setDescription(currentUser.about);   \r\n        } // eslint-disable-next-line\r\n    }, [props.isOpen]);\r\n\r\n    return (\r\n        <PopupWithForm //Далее \"пробрасываем\" пропсы\r\n          name=\"form\"\r\n          title=\"Редактировать профиль\"\r\n          submitText={buttonText}\r\n          isOpen={props.isOpen}\r\n          onClose={props.onClose}\r\n          onSubmit={handleSubmit}\r\n        >\r\n            <input\r\n              className=\"popup__input popup__input_type_name\"\r\n              id=\"name-item\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Введите имя\"\r\n              minLength=\"2\"\r\n              maxLength=\"40\"\r\n              value={name} //Привязываем стейт-переменную name к полю ввода\r\n              onChange={handleNameChange} //Добавляем обработчик onChange\r\n              required\r\n            />\r\n            <span className=\"popup__input-error\" id=\"name-item-error\"></span>\r\n            <input\r\n              className=\"popup__input popup__input_type_about\"\r\n              id=\"about-item\"\r\n              type=\"text\"\r\n              name=\"about\"\r\n              placeholder=\"О себе\"\r\n              minLength=\"2\"\r\n              maxLength=\"200\"\r\n              value={description} //Привязываем стейт-переменную description к полю ввода\r\n              onChange={handleAboutChange} //Добавляем обработчик onChange\r\n              required\r\n            />\r\n            <span className=\"popup__input-error\" id=\"about-item-error\"></span>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default EditProfilePopup;","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction EditAvatarPopup(props) {\r\n    const [buttonText, setButtonText] = React.useState(\"Сохранить\");\r\n    const avaRef = React.useRef();\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        setButtonText(\"Загрузка...\");\r\n        props\r\n            .onUpdateAvatar({\r\n                avatar: avaRef.current.value\r\n            })\r\n            .then(() => {\r\n                handleClosePopup();\r\n            })\r\n            .finally(() => {\r\n                setButtonText(\"Сохранить\");\r\n            })\r\n    }\r\n\r\n    function handleClosePopup() {\r\n        props.onClose();\r\n        setTimeout(() => (avaRef.current.value = \"\"), 200);\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm\r\n          onSubmit={handleSubmit}\r\n          name=\"avatar\"\r\n          title=\"Изменить аватар\"\r\n          submitText={buttonText}\r\n          isOpen={props.isOpen}\r\n          onClose={handleClosePopup}\r\n        >\r\n            <input\r\n              ref={avaRef}\r\n              className=\"popup__input popup__input_type_link\"\r\n              id=\"avatar-item\"\r\n              type=\"url\"\r\n              name=\"avatar\"\r\n              placeholder=\"Ссылка на изображение\"\r\n              required\r\n            />\r\n            <span className=\"popup__input-error\" id=\"avatar-item-error\"></span>\r\n        </PopupWithForm>\r\n\r\n    )\r\n}\r\n\r\nexport default EditAvatarPopup;","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction DeleteCardPopup({isOpen, onClose, card, onSubmit }) {\r\n    const [buttonText, setButtonText] = React.useState(\"Да\");\r\n    //Подтверждение удаления\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        setButtonText(\"Удаление...\");\r\n        onSubmit(card)\r\n            .then(() => {\r\n                setButtonText(\"Да\");\r\n            })\r\n    }\r\n\r\n    return(\r\n        <PopupWithForm      // Компонент формы - запрос на удаление карточки\r\n            name=\"delete\"\r\n            title=\"Вы уверены?\"\r\n            formName=\"delete-card\"\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            submitText={buttonText}\r\n            onSubmit={handleSubmit}\r\n        />\r\n    );\r\n}\r\n\r\nexport default DeleteCardPopup;","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction AddPlacePopup(props) {\r\n    const [buttonText, setButtonText] = React.useState(\"Создать\");\r\n    const [name, setName] = React.useState(\"\");\r\n    const [link, setLink] = React.useState(\"\");\r\n\r\n    function handleNameChange(e) { //Ф-я изменения названия\r\n        setName(e.target.value);\r\n    }\r\n\r\n    function handleLinkChange(e) { //Ф-я изменения ссылки\r\n        setLink(e.target.value)\r\n    }\r\n\r\n    function handleClosePopup() { //Ф-я ручного закрытия попапа\r\n        props.onClose();\r\n        setTimeout(() => { //Очищаем инпуты\r\n            setName(\"\");\r\n            setLink(\"\");\r\n        }, 20);\r\n    }\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        setButtonText(\"Создание...\");\r\n        props\r\n            .onAddPlace({name, link})\r\n            .then(() => handleClosePopup())\r\n            .finally(() => {\r\n                setButtonText(\"Создать\");\r\n            })\r\n    }\r\n    \r\n    return (\r\n        <PopupWithForm\r\n          name=\"form\"\r\n          title=\"Новое место\"\r\n          submitText={buttonText}\r\n          isOpen={props.isOpen}\r\n          onClose={handleClosePopup}\r\n          onSubmit={handleSubmit}\r\n        >\r\n            <input\r\n              className=\"popup__input popup__input_type_caption\"\r\n              id=\"title-item\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Название\"\r\n              minLength=\"1\"\r\n              maxLength=\"30\"\r\n              value={name}\r\n              onChange={handleNameChange}\r\n              required\r\n            />\r\n            <span className=\"popup__input-error\"id=\"title-item-error\"></span>\r\n            <input\r\n              className=\"popup__input popup__input_type_link\"\r\n              id=\"link-item\"\r\n              type=\"url\"\r\n              name=\"link\"\r\n              placeholder=\"Ссылка на изображение\"\r\n              value={link}\r\n              onChange={handleLinkChange}\r\n              required\r\n            />\r\n            <span className=\"popup__input-error\" id=\"link-item-error\"></span>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default AddPlacePopup;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nfunction ProtectedRoute({ component: Component, ...props }) {  \r\n  return (<Route> \r\n    { () =>\r\n      props.loggedIn ? <Component {...props} /> : <Redirect to=\"/sign-in\" /> \r\n    }\r\n  </Route>);\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","import React from \"react\";\r\nimport \"../styles/sign.css\";\r\n\r\n// Компонент формы для регистрации и авторизации\r\nfunction AuthForm({ section, title, submit, emailValue, passwordValue, onChange, submitText }) {\r\n    return (\r\n        <section className={section}>\r\n            <div className=\"sign\">\r\n                <h2 className=\"sign__welcome\">{title}</h2>\r\n                <form className=\"sign__form\" onSubmit={submit}>\r\n                    <input\r\n                        className=\"sign__item\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        placeholder=\"Введите E-mail\"\r\n                        value={emailValue}\r\n                        onChange={onChange}\r\n                        required\r\n                    />\r\n                    <input\r\n                        className=\"sign__item\"\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        placeholder=\"Введите пароль\"\r\n                        value={passwordValue}\r\n                        onChange={onChange}\r\n                        autoComplete=\"off\"\r\n                        minLength=\"5\"\r\n                        required\r\n                    />\r\n                    <button className=\"sign__button\" type=\"submit\">\r\n                        {submitText}\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\nexport default AuthForm;","import React from \"react\";\r\nimport '../styles/sign.css';\r\nimport AuthForm from './AuthForm';\r\n\r\nfunction Login ({onLogin}) {\r\n    // Стейты полей в форме авторизации\r\n    const [email, setEmail] = React.useState(\"\");\r\n    const [password, setPassword] = React.useState(\"\");\r\n\r\n    function handleChange(evt) {\r\n        if (evt.target.name === 'email') {\r\n            setEmail(evt.target.value);\r\n        } else if (evt.target.name === 'password') {\r\n            setPassword(evt.target.value);\r\n        }\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (!email || !password) {      //Если поля пустые, прерываем ф-ю и очищаем поля\r\n            return;\r\n        }\r\n        onLogin(email, password);\r\n    }\r\n\r\n    return (\r\n        <AuthForm \r\n            section=\"login\"\r\n            title=\"Вход\"\r\n            submit={handleSubmit}\r\n            onChange={handleChange}\r\n            submitText=\"Войти\"\r\n            emailValue={email}\r\n            passwordValue={password}\r\n        />\r\n    );\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\nimport \"../styles/sign.css\";\r\nimport AuthForm from \"./AuthForm\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Register ({ onRegister }) {  //Создаем компонент формы регистрации\r\n    // Стейты полей в форме регистрации\r\n    const [email, setEmail] = React.useState(\"\");\r\n    const [password, setPassword] = React.useState(\"\");\r\n\r\n    function handleChange(evt) {\r\n        if (evt.target.name === 'email') {\r\n            setEmail(evt.target.value);\r\n        } else if (evt.target.name === 'password') {\r\n            setPassword(evt.target.value);\r\n        }\r\n    }\r\n    \r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        onRegister(email, password);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AuthForm \r\n                section=\"register\"\r\n                title=\"Регистрация\"\r\n                emailValue={email}\r\n                passwordValue={password}\r\n                submit={handleSubmit}\r\n                onChange={handleChange}\r\n                submitText=\"Зарегистрироваться\"\r\n            />\r\n            <div className=\"sign__sign-in\">\r\n                <Link to=\"sign-in\" className=\"sign__login-link\">\r\n                    Уже зарегистрированы? Войти.\r\n                </Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register;","import React, {useEffect} from \"react\";\r\n\r\n//Создание универсального компонента для отображения любого попапа\r\nfunction Popup({ isOpen, popupName, onClose, children, isImagePopup}) {\r\n    //Используем `useEffect` для обработчика закрытия попапа на Esc\r\n    useEffect( () => {\r\n        if (!isOpen) return; //Если попап не! открыт, то обработчик не навешиваем\r\n\r\n        // объявляем функцию, чтобы не терялась ссылка при рендере компонента\r\n        function closeByEscape(e) {\r\n            if (e.key === 'Escape') {\r\n                onClose();\r\n            }\r\n        }\r\n        // Навешиваем обработчик на открытый попап\r\n        document.addEventListener('keydown', closeByEscape);\r\n        // Снимаем обработчик в clean-up функции\r\n        return () => document.removeEventListener('keydown', closeByEscape);\r\n    }, [isOpen, onClose])\r\n\r\n    //Создаем обработчик на закрытие по оверлею\r\n    const handleCloseByOverlay = (e) => {\r\n        if (e.target === e.currentTarget) {\r\n      onClose();\r\n    }\r\n    };\r\n\r\n    //Рендерим верстку любого объекта с классом popup и классом popup-opened при открытии. \r\n    return (\r\n        <section\r\n            className={`popup ${isOpen ? 'popup_opened' : ''}`}\r\n            //Добавляем закрытие на оверлей\r\n            onClick={handleCloseByOverlay}\r\n        >\r\n        {/* Создаем контейнер для контента попапа согласно его типу\r\n          у ImagePopup свой контейнер, а у остальных одинаковый\r\n          из-за этого делаем условие на котором будет отображаться тот или иной попап (пропсами)\r\n        */}\r\n            <div className={`${isImagePopup ? 'popup_type_fullscreen-image' : `popup__container popup__container_type_${popupName}`}`}>\r\n                {/*Размещаем здесь контент попапа*/}\r\n                {children}\r\n                {/*Размещаем кнопку-крестик закрытия (она есть у любого попапа)*/}\r\n                <button className=\"popup__button-close\" type=\"button\" onClick={onClose} />\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Popup;","export default __webpack_public_path__ + \"static/media/OK.a9eb6caf.svg\";","export default __webpack_public_path__ + \"static/media/REJECT.d4ce2a26.svg\";","import React from \"react\";\r\nimport Popup from \"./Popup\";\r\nimport successImg from \"../images/OK.svg\";\r\nimport rejectImg from \"../images/REJECT.svg\";\r\n\r\n// Попап-компонент для отображения успешной/не успешной регистрации \r\nfunction InfoTooltip({ namePopup, isOpen, onClose, isSuccess }) {\r\n    return (\r\n        <Popup \r\n            popupName={namePopup}\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n        >\r\n            <figure className=\"infoTooltip__figure\">\r\n                <img className=\"infoTooltip__img\" src={isSuccess ? successImg : rejectImg} alt=\"Статус регистрации\" /> \r\n                <figcaption className=\"infoTooltip__caption\">\r\n                    {isSuccess ? 'Вы успешно зарегистрировались!' : 'Что-то пошло не так! Попробуйте еще раз.'}\r\n                </figcaption>\r\n            </figure>\r\n        </Popup>\r\n    );\r\n}\r\n\r\nexport default InfoTooltip;","export const BASE_URL = 'https://api.mesto-exo.nomoredomains.icu';\r\n\r\nconst request = ({ url, method = 'POST', token, body }) => {\r\n  const config = {\r\n    method,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      ...(!!token && { Authorization: `Bearer ${token}` }),\r\n    },\r\n    ...(!!body && { body: JSON.stringify(body) }),\r\n  };\r\n  return fetch(`${BASE_URL}${url}`, config).then((res) => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(res.status);\r\n  });\r\n};\r\n\r\nexport const register = (email, password) => {\r\n  return request({\r\n    url: '/signup',\r\n    body: { email, password },\r\n  });\r\n};\r\n\r\nexport const authorize = (email, password) => {\r\n  return request({\r\n    url: '/signin',\r\n    body: { email, password },\r\n  }).then((res) => {\r\n    if (res.token) {\r\n      localStorage.setItem('jwt', res.token);\r\n      return res;\r\n    }\r\n  });\r\n};\r\n\r\nexport const checkToken = (token) => {\r\n  return request({\r\n    url: '/users/me',\r\n    method: 'GET',\r\n    token,\r\n  });\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../styles/notFound.css';\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <div className=\"notFound page__container\">\r\n      <p className=\"notFound__note\">\r\n        Кажется что-то пошло не&nbsp;так! Страница, которую вы&nbsp;запрашиваете, не&nbsp;существует. Возможно она\r\n        устарела, была удалена, или был введен неверный адрес в&nbsp;адресной строке.\r\n        <Link className=\"notFound__link\" to=\"/\">\r\n          <button type=\"submit\" className=\"notFound__button\">\r\n            Вернуться на главную\r\n          </button>\r\n        </Link>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Route, Redirect, Switch, useHistory } from 'react-router-dom';\r\nimport Header from \"./Header\";\r\nimport Main from \"./Main\";\r\nimport Footer from \"./Footer\";\r\nimport ImagePopup from \"./ImagePopup\";\r\nimport api from \"../utils/api\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\nimport EditProfilePopup from \"./EditProfilePopup\";\r\nimport EditAvatarPopup from \"./EditAvatarPopup\";\r\nimport DeleteCardPopup from \"./DeleteCardPopup\";\r\nimport AddPlacePopup from \"./AddPlacePopup\";\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\nimport Login from \"./Login\";\r\nimport Register from \"./Register\";\r\nimport InfoTooltip from \"./InfoTooltip\";\r\nimport * as ApiAuth from '../utils/ApiAuth';\r\nimport NotFound from './NotFound';\r\n\r\n\r\nfunction App() {\r\n\r\n  // СТЕЙТЫ\r\n  // Стейты, отвечающие за видимость попапов\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpenClose] = useState(false); //Стейт попапа ред. профиля\r\n  const [isAddCardPopupOpen, setIsAddCardPopupOpenClose] = useState(false); //Стейт попапа добавления карточки\r\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpenClose] = useState(false); //Стейт попапа изменения аватара\r\n  const [isDeleteCardPopupOpen, setIsDeleteCardPopupOpen] = useState(false); //Стейт попапа удаления карточки\r\n\r\n  const [selectedCard, setSelectedCard] = useState({ // Стейт, отвечающий за открытие нужной карточки\r\n    name: \"\",\r\n    link: \"\",\r\n  });\r\n\r\n  const [currentUser, setCurrentUser] = useState({}); //Стейт данных текущего пользователя\r\n  const [isImagePopupOpen, setImagePopupOpen] = useState(false); //Стейт попапа карточки\r\n  const [cards, setCards] = useState([]); // Стейт, отвечающий за состояние cards\r\n  const [toDeleteCard, setToDeleteCard] = useState(''); // Стейт, отвечающий за подготовку к удалении карточки\r\n\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [isRegistrationSuccess, setIsRegistrationSuccess] = useState(false);\r\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false);\r\n  const [userEmail, setUserEmail] = useState('');\r\n  const history = useHistory();\r\n  //===========//\r\n\r\n  //=== API ЗАПРОСЫ ===//\r\n  // Эффект проверяющий токен при загрузки страницы, чтобы не обрывало сессию при перезагрузке страницы\r\n\r\n  //Эффект, отвечающий за запрос на отображение карточек и информации пользователя\r\n  useEffect(() => {\r\n    if (!loggedIn){\r\n    return;\r\n    }\r\n    checkToken();\r\n    Promise.all([api.getUserData(), api.getInitialCards()])\r\n      .then(([userInfo, cardList]) => {\r\n        setCurrentUser(userInfo);\r\n        setCards(cardList);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [loggedIn]);\r\n\r\n  // ===== Функции-обработчики для открытия попапов\r\n  function handleEditProfileClick() { //Открытие попапа ред. профиля по клику (меняем состояние на true)\r\n    setIsEditProfilePopupOpenClose(true);\r\n  }\r\n\r\n  function handleAddPlaceClick() { //Открытие попапа добавления карточки по клику (меняем состояние на true)\r\n    setIsAddCardPopupOpenClose(true);\r\n  }\r\n\r\n  function handleEditAvatarClick() { //Открытие попапа ред. аватара по клику (меняем состояние на true)\r\n    setEditAvatarPopupOpenClose(true);\r\n  }\r\n\r\n  function handleCardDeleteClick(cardId) { //Открытие попапа удаления карточки\r\n    // Отмечаем id карточки\r\n    setToDeleteCard(cardId);\r\n    // Передаем открытие попапа\r\n    setIsDeleteCardPopupOpen(true);\r\n  }\r\n\r\n  function handleImagePopupOpen(card) { //Открытие попапа карточки по клику (меняем состояние на true)\r\n    setSelectedCard(card);\r\n    setImagePopupOpen(true);\r\n  }\r\n\r\n  // ===== Функция-обработчик для закрытия всех попапов ===== //\r\n  // Закрываем попапы (изменяем открытое состояние с true на false) и очищаем поля\r\n  function closeAllPopups() {\r\n    setIsEditProfilePopupOpenClose(false);\r\n    setIsAddCardPopupOpenClose(false);\r\n    setEditAvatarPopupOpenClose(false);\r\n    setIsDeleteCardPopupOpen(false);\r\n    setImagePopupOpen(false);\r\n    setSelectedCard({ name: \"\", link: \"\" });\r\n    setIsInfoTooltipOpen(false);\r\n  }\r\n\r\n  //Добавим функцию лайка\r\n  function handleLikeClick (card) {\r\n    //Проверяем, есть ли лайк на этой карточке\r\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\r\n    //Отправляем запрос в API и получаем обновлённые данные карточки\r\n    api\r\n    .changeLikeCardStatus(card._id, !isLiked)\r\n      .then((newCard) => {\r\n        // Формируем новый массив на основе имеющегося c новой карточкой\r\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\r\n    })\r\n      .catch((err) => console.log('Ошибка лайка карточки: ', err));\r\n  } \r\n  \r\n\r\n  function handleDeleteClick(cardId) {\r\n    return api\r\n              .deleteCard(cardId)\r\n              .then(() => {\r\n                // с помощью метода filter: создаем копию массива, исключив из него удалённую карточку\r\n                setCards((cards) => cards.filter((card) => card._id !== cardId));\r\n                closeAllPopups();\r\n              })\r\n              .catch((err) => console.log(`Ошибка при удалении карточки: ${err}`));\r\n  }\r\n\r\n  function handleUpdateUser(data) { //Добавляем обработчик (п. 3)\r\n    return api\r\n              .updateUserData(data)\r\n              .then((res) => {setCurrentUser(res);})\r\n              .catch((err) => alert('Ошибка при загрузке данных пользователя', err));\r\n  }\r\n\r\n  function handleUpdateAvatar(data) {\r\n    return api\r\n              .updateAvatar(data)\r\n              .then((res) => {\r\n                setCurrentUser(res);\r\n              })\r\n              .catch((err) => alert('Ошибка при обновлении аватара', err));\r\n  }\r\n\r\n  function handleAddPlaceSubmit(card) {\r\n    return api\r\n              .addNewCard(card)\r\n              .then((newCard) => {\r\n                setCards([newCard, ...cards]);\r\n              })\r\n              .catch((err) => alert('Ошибка при добавлении карточки', err));\r\n  }\r\n  \r\n// === Функция проверки токена === //\r\n  function checkToken() {\r\n    const jwt = localStorage.getItem('jwt');\r\n    if (jwt) {\r\n      api.setToken(jwt);\r\n      api.getUserData(jwt)\r\n        .then((res) => {\r\n          setCurrentUser(res);\r\n          setLoggedIn(true);\r\n        })\r\n        .catch((err)=> console.log(err))\r\n    }\r\n  }\r\n\r\n  // === Функция регистрации === //\r\n  function handleRegistration(email, password) {\r\n    ApiAuth.register(email, password)\r\n      .then((res) => {\r\n        if (res) {\r\n          console.log('Регистрация прошла успешно!');\r\n          setIsRegistrationSuccess(true);\r\n          setIsInfoTooltipOpen(true);\r\n          history.push('/sign-in');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setIsInfoTooltipOpen(true);\r\n        setIsRegistrationSuccess(false);\r\n        console.log('Ошибка регистрации:', err);\r\n      });\r\n  }\r\n\r\n  // === Функция авторизации === //\r\n  function handleAuthorization(email, password) {\r\n    ApiAuth.authorize(email, password)\r\n      .then((res) => {\r\n        const jwt = res.token;\r\n        if (res.token) {\r\n          localStorage.setItem('jwt', jwt);\r\n          api.setToken(jwt);\r\n          setLoggedIn(true);\r\n          setUserEmail(email);\r\n          history.push('/');\r\n          console.log('Время входа:', new Date().toLocaleTimeString());\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setIsInfoTooltipOpen(true);\r\n        setIsRegistrationSuccess(false);\r\n        console.log('Ошибка входа в систему:', err);\r\n      });\r\n  }\r\n\r\n  function handleLogOut() {\r\n    localStorage.removeItem('jwt');\r\n    setLoggedIn(false);\r\n    setUserEmail('');\r\n    history.push('/sign-in');\r\n    console.log('Время выхода:', new Date().toLocaleTimeString());\r\n  }\r\n\r\n\r\n  //=== РЕНДЕРИНГ КОМПОНЕНТОВ ===//\r\n  return (\r\n      <CurrentUserContext.Provider value={currentUser}>\r\n        <Header userEmail={userEmail} onLogOut={handleLogOut}/>\r\n          <Switch>\r\n            <ProtectedRoute  /* Защищаем контент главной страницы от неавторизованных пользователей */\r\n              component={Main}\r\n              loggedIn={loggedIn} \r\n              exact path=\"/\"\r\n              onCardClick={handleImagePopupOpen}\r\n              onEditProfile={handleEditProfileClick}\r\n              onAddPlace={handleAddPlaceClick}\r\n              onEditAvatar={handleEditAvatarClick}\r\n              onCardLike={handleLikeClick}\r\n              onCardDelete={handleCardDeleteClick}\r\n              cards={cards}\r\n            />\r\n\r\n            <Route path=\"/sign-up\">\r\n              <Register onRegister={handleRegistration} /> \r\n            </Route>\r\n\r\n            <Route path=\"/sign-in\">\r\n              <Login onLogin={handleAuthorization} />\r\n            </Route>\r\n\r\n            <Route path=\"*\">\r\n              <NotFound />\r\n            </Route>\r\n\r\n            <Route>\r\n            {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-up\"/>}\r\n            </Route>\r\n          </Switch>\r\n        <Footer />\r\n        <ImagePopup card={selectedCard} isOpen={isImagePopupOpen} onClose={closeAllPopups} /> \r\n        <EditProfilePopup \r\n          isOpen={isEditProfilePopupOpen} \r\n          onClose={closeAllPopups} \r\n          onUpdateUser={handleUpdateUser} //Добавляем пропс с обработчиком\r\n        />\r\n        <AddPlacePopup \r\n          isOpen={isAddCardPopupOpen} \r\n          onClose={closeAllPopups} \r\n          onAddPlace={handleAddPlaceSubmit}\r\n        />\r\n        <DeleteCardPopup // Попап подтверждения удаления карточки\r\n        isOpen={isDeleteCardPopupOpen}\r\n        onClose={closeAllPopups}\r\n        onSubmit={handleDeleteClick}\r\n        card={toDeleteCard}\r\n      />\r\n        <EditAvatarPopup \r\n          isOpen={isEditAvatarPopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateAvatar={handleUpdateAvatar}\r\n        /> \r\n        <InfoTooltip /* Попап уведомление о статусе регистрации (успешно/неуспешно) */\r\n        namePopup=\"infoTooltip\"\r\n        isSuccess={isRegistrationSuccess}\r\n        isOpen={isInfoTooltipOpen}\r\n        onClose={closeAllPopups}\r\n        />\r\n      </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./styles/index.css\";\r\nimport App from \"./components/App\";\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('page')\r\n);\r\n\r\n"],"sourceRoot":""}